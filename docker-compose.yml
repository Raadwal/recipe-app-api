# Version of docker compose syntax that we are using
version: "3.9"

# Docker compose file typically consist of one or more services required to run application

services:
  # Name of our service
  app:
    # Building docker file in the current directory
    build:
      # . means current directory
      context: .
      # If we are running this docker compose (used for development only) it's created argument DEV and sets its value to true
      args:
        - DEV=true
    # Maps port 8000 on local machine to port 8000 inside Docker container
    ports:
      - "8000:8000"
    # Way of mapping directories from our system into the Docker container
    # We are mapping ./app from our system to /app in the Docker container
    # We do it because we want to the updates we make to our code in our local project to be reflected in the running container in real time
    # Thanks to that we don't need to rebuild our container every time we make changes in the code
    # It's works two ways
    volumes:
      - ./app:/app
    # Command we use to run the service, but we can override that command when run Docker, compose, run
    # Its default command when we don't specify anything
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      # db is the name of the service, so we can use it to connect to database
      - DB_HOST=db
      # Credentials should match with credentials in database
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
    # It tells docker-compose that the app service depends on db service
    # It will wait for db service to start before starting app service
    depends_on:
      - db
      
  db:
    image: postgres:13-alpine
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    # Initial database configuration for our server. After started it will create database: devdb and user: devuser
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=changeme


# Docker will create volume locally, so data in the database won't be cleared every time docker starts
volumes:
  dev-db-data:
